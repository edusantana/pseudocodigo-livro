== Linguagem de Pseudocódigo

Neste capítulos vamos apresentar uma gramática para descrever uma linguagem
de Pseudocódigo.

=== Para que serve Pseudocódigo?

.Pseudocódigo
____
O Pseudocódigo é uma linguagem próxima ao natural para ensinar algorítmos
e ensinar programação.
____

Uma linguagem de programação possui regras fixas, que precisam ser
atendidados para que seja compilada com sucesso.

Para ensinar programação é importante que o Pseudocódigo possua um formalismo
consistente, similar a uma lingagem de programação.

Podemos ver um exemplo de incostência a seguir:

----
PARA x=1 ATÉ 100 FAÇA
    ...
FIM_PARA

PARA y=1 ATÉ 100
    ...
FIM-PARA
----

No exemplo dado, temos duas inconsistências: 

* o camando `PARA` deve possuir um `FAÇA` ou não?
* o final do bloco `PARA` é identificado por `FIM_PARA` ou `FIM-PARA`?

=== Qual a utilidade de uma gramática para Pseudocódigo?

Ao produzirmos uma gramática para nossa linguagem, podemos verificar a 
conformidade do código escrito com o formalismo da gramática. Desta forma,
podemos identificar erros ou inconsistências dos arquivos.

NOTE: No futuro, podemos construir até mesmo um compilador ou interpretador
para executar a linguagem de pseudocódigo. Possibilitando testar a execução
do pseudocódigo.


=== Gramática do pseudocódigo

A seguir temos uma gramática que descrever um pseudocódigo.


.Gramática PEG do pseudocódigo
----
include::code/pseudocodigo/pseudocodigo.peg[]
----

=== Exemplos de Pseudocódigos

==== A média de dois números

.Programa para calcular a média das notas
----
DECLARA nota1,nota2,media:NUMERO

ESCREVA "Digite a nota1:"
LEIA nota1
ESCREVA "Digite a nota2:"
LEIA nota2

media = (nota1 + nota2)/2

ESCREVA "Sua média foi:"
ESCREVA media

SE media >= 7 ENTÃO
  ESCREVA "APROVADO"
SE media < 4 ENTÃO
  ESCREVA "REPROVADO"
SE media >= 4 E media < 7 ENTÃO
  ESCREVA "Precisa fazer prova final"
----

.O uso do SE
----
include::code/pseudocodigo/alg_menorq20.pseudo[]
----

.O uso do SE e SENÃO
----
include::code/pseudocodigo/alg_decisao_composta.pseudo[]
----

[NOTE]
====
Mostrar que não há ambiguidade no SE..SE..SENÃO, através da árvore sintática
do seguinte código.

O último SENÃO está associado ao SE do `x` ou SE do `y`?

----
SE x>2 ENTÃO
    SE y>3 ENTÃO
        z = 4
  SENÃO w = 5
----

Na realidade, se a árvore sintática foi construída, a ambiguidade já foi resolvida.
====

.O uso do ENQUANTO
----
include::code/pseudocodigo/alg_estrutura_repeticao.pseudo[]
----

.O uso do PARA
----
DECLARA numero,potencia,resultado:NUMERO

resultado = 1
PARA i=0 ATÉ potencia FAÇA
  resultado = numero * resultado
FIM_PARA
----

=== Prova que a linguagem é Turing Completa

----
DECLARA estadoAtual: NUMERO
DECLARA estados[]: NUMERO
DECLARA posicaoDaCabeca: NUMERO
DECLARA fita[]: TEXTO

# Avançar a fita
posicaoDaCabeca = posicaoDaCabeca + 1

# Mudar o estado
estadoAtual = 5

#Escrever na fita
fita[posicaoDaCabeca] = simbolo
----

////
Sempre termine os arquivos com uma linha em branco.
////


